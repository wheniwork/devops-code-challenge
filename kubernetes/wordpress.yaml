apiVersion: v1
kind: Service
metadata:
  name: wordpress
  namespace: company-blog
  labels:
    app: wp-blog
spec:
  ports:
    - port: 80
      targetPort: 80
      nodePort: 31088 #added a node port
  selector:
    app: wp-blog
    tier: frontend
  type: NodePort
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pv-claim
  namespace: company-blog
  labels:
    app: wp-blog
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wordpress
  labels:
    app: wp-blog
spec:
  replicas: 1  # Set the desired number of replicas
  selector:
    matchLabels:
      app: wp-blog
      tier: frontend
  template:
    metadata:
      labels:
        app: wp-blog
        tier: frontend
    spec:
      containers:
      - image: wordpress:latest
        name: wordpress
        ports:
        - containerPort: 80
        volumeMounts:
        - name: wp-persistent-storage
          mountPath: /var/www/html  # Mount the volume to the WordPress directory
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 300
          periodSeconds: 10
        env:
        - name: WORDPRESS_DB_HOST
          value: "wordpress-mysql"
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: wp-blog-db-pass
              key: password
      volumes:
      - name: wp-persistent-storage
        persistentVolumeClaim:
          claimName: wp-pv-claim


---
# TODO: complete the wordpress deployment
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: wordpress
